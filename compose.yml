version: '3'
services:
  ui:
    image: nginx
    restart: always
    ports:
      - 80:80
      - 443:443/tcp
    volumes:
     - ./dist/apps/ui:/usr/share/nginx/html/
     - ./default.conf/:/etc/nginx/conf.d/default.conf
     - ./data/certbot/conf:/etc/letsencrypt
     - ./data/certbot/www:/var/www/certbot
    networks:
     - app-network

  api:
    build:
      context: ./
      dockerfile: api.Dockerfile
    restart: always
    environment:
    - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    container_name: api
    ports:
      - 3333:3333/tcp
    networks:
      - app-network

  python:
    mem_limit: 16g
    build:
      context: ./
      dockerfile: python.Dockerfile
    volumes:
      - ./transformers_cache:/root/.cache/huggingface/
    restart: always
    depends_on:
      - redis
    container_name: python
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
    - ./data/certbot/conf:/etc/letsencrypt
    - ./data/certbot/www:/var/www/certbot

  redis:
    image: redis:latest
    networks:
      - app-network
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data


networks:
  app-network:
    driver: bridge

volumes:
  redis_data: {}